name: Compilar e implantar o aplicativo .NET Core no Aplicativo Web freelancer-hub-backend com o Serviço de Gerenciamento de API freelancer-hub-backendapi – freelancer-hub-backend

on:
  push:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: freelancer-hub-backend
  AZURE_WEBAPP_PACKAGE_PATH: ./publish
  AZURE_APIM_RESOURCE_PATH: /freelancer-hub-api
  AZURE_APIM_RESOURCEGROUP: freelancerHub
  AZURE_APIM_SERVICENAME: freelancer-hub-backendapi
  AZURE_APIM_API_ID: freelancer-hub-backend
  AZURE_APIM_APPSERVICEURL: https://freelancer-hub-backend-exe7f6cygggae0db.eastus2-01.azurewebsites.net
  SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION: 5.6.3
  SWASHBUCKLE_DOTNET_CORE_VERSION: 3.1.x
  API_IMPORT_SPECIFICATION_PATH: ./publish/swagger.json
  API_IMPORT_DLL: ./back-end/freelancer-hub-backend/bin/Release/net8.0/freelancer-hub-backend.dll
  API_IMPORT_VERSION: v1
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  PROJECT_PATH: ./back-end/freelancer-hub-backend/freelancer-hub-backend.csproj

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Setup SwashBuckle .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.SWASHBUCKLE_DOTNET_CORE_VERSION }}

      - name: Restore
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Test
        run: dotnet test ${{ env.PROJECT_PATH }} --no-build --verbosity normal

      - name: Publish
        run: dotnet publish ${{ env.PROJECT_PATH }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Install Swashbuckle CLI .NET Global Tool
        run: dotnet tool install --global Swashbuckle.AspNetCore.Cli --version ${{ env.SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION }}

      - name: Publish Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Import API into Azure API Management
        run: az apim api import --path "${{ env.AZURE_APIM_RESOURCE_PATH }}" --resource-group "${{ env.AZURE_APIM_RESOURCEGROUP }}" --service-name "${{ env.AZURE_APIM_SERVICENAME }}" --api-id "${{ env.AZURE_APIM_API_ID }}" --service-url "${{ env.AZURE_APIM_APPSERVICEURL }}" --specification-path "${{ env.API_IMPORT_SPECIFICATION_PATH }}" --specification-format OpenApi --subscription-required false

      - name: logout
        run: az logout
